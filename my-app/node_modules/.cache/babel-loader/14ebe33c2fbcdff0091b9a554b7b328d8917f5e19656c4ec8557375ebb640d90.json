{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\FE_Web_Chat\\\\my-app\\\\src\\\\components\\\\Layout\\\\Content\\\\ChatContent\\\\chatcontent.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport ListChat from \"./listchat\";\nimport Message from \"./message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatdata = [{\n  id: 1,\n  name: \"Quang Vinh\",\n  nation: \"VietNam\",\n  message: [{\n    chat: \"Hi\",\n    time: \"10:11\",\n    people: \"your\"\n  }, {\n    chat: \"How are you ?\",\n    time: \"10:11\",\n    people: \"your\"\n  }, {\n    chat: \"Hello\",\n    time: \"10:11\",\n    people: \"me\"\n  }, {\n    chat: \"I'm fine\",\n    time: \"10:11\",\n    people: \"me\"\n  }]\n}, {\n  id: 2,\n  name: \"John\",\n  nation: \"America\",\n  message: [{\n    chat: \"Hi\",\n    time: \"10:11\",\n    people: \"your\"\n  }, {\n    chat: \"How are you ?\",\n    time: \"10:11\",\n    people: \"your\"\n  }, {\n    chat: \"Hello\",\n    time: \"10:11\",\n    people: \"me\"\n  }, {\n    chat: \"I'm fine\",\n    time: \"10:11\",\n    people: \"me\"\n  }]\n}];\nconst check = localStorage.getItem('chatdata');\nif (!check) {\n  localStorage.setItem('chatdata', JSON.stringify(chatdata));\n}\nexport const ChatContext = /*#__PURE__*/createContext();\nfunction ChatContent() {\n  _s();\n  const [choose, setChoose] = useState(1);\n  useEffect(() => {\n    setChoose();\n  }, [choose]);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: choose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodycontent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"namecontent\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frame\",\n        children: [/*#__PURE__*/_jsxDEV(ListChat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatContent, \"okwYEYg9LhWQCpNuQdfIexfYBgk=\");\n_c = ChatContent;\nexport default ChatContent;\nvar _c;\n$RefreshReg$(_c, \"ChatContent\");","map":{"version":3,"names":["createContext","useEffect","useState","ListChat","Message","jsxDEV","_jsxDEV","chatdata","id","name","nation","message","chat","time","people","check","localStorage","getItem","setItem","JSON","stringify","ChatContext","ChatContent","_s","choose","setChoose","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/FE_Web_Chat/my-app/src/components/Layout/Content/ChatContent/chatcontent.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport ListChat from \"./listchat\";\r\nimport Message from \"./message\";\r\n\r\nconst chatdata = [\r\n    {\r\n        id: 1,\r\n        name: \"Quang Vinh\",\r\n        nation: \"VietNam\",\r\n        message: [\r\n            { chat: \"Hi\", time: \"10:11\", people: \"your\" },\r\n            { chat: \"How are you ?\", time: \"10:11\", people: \"your\" },\r\n            { chat: \"Hello\", time: \"10:11\", people: \"me\" },\r\n            { chat: \"I'm fine\", time: \"10:11\", people: \"me\" }],\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"John\",\r\n        nation: \"America\",\r\n        message: [\r\n            { chat: \"Hi\", time: \"10:11\", people: \"your\" },\r\n            { chat: \"How are you ?\", time: \"10:11\", people: \"your\" },\r\n            { chat: \"Hello\", time: \"10:11\", people: \"me\" },\r\n            { chat: \"I'm fine\", time: \"10:11\", people: \"me\" }],\r\n    },\r\n]\r\nconst check = localStorage.getItem('chatdata');\r\nif (!check) {\r\n    localStorage.setItem('chatdata', JSON.stringify(chatdata));\r\n}\r\n\r\nexport const ChatContext = createContext();\r\n\r\nfunction ChatContent() {\r\n    const [choose, setChoose] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setChoose()\r\n    }, [choose])\r\n\r\n    return (\r\n        <ChatContext.Provider value={choose}>\r\n        <div className=\"bodycontent\">\r\n            <div className=\"namecontent\"><span>Chat</span></div>\r\n            <div className=\"frame\">\r\n                <ListChat />\r\n                <Message />\r\n            </div>\r\n        </div>\r\n        </ChatContext.Provider>\r\n    );\r\n}\r\n\r\nexport default ChatContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}